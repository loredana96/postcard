{"version":3,"file":"state.js","sources":["../../../../libs/state/src/lib/rx-state.service.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/array/insert.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/_internals/valuesComparer.util.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/array/remove.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/array/toDictionary.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/array/update.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/array/extract.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/array/upsert.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/object/deleteProp.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/object/dictionaryToArray.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/object/patch.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/object/setProp.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/object/toggle.ts","../../../../libs/state/src/lib/deprecated/transformation-helpers/object/slice.ts","../../../../libs/state/src/state.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport {\n  AccumulationFn,\n  createAccumulationObservable,\n  createSideEffectObservable,\n  isKeyOf,\n  KeyCompareMap,\n  PickSlice,\n  safePluck,\n  select,\n} from '@rx-angular/state/selections';\nimport {\n  EMPTY,\n  isObservable,\n  Observable,\n  OperatorFunction,\n  Subscribable,\n  Subscription,\n  Unsubscribable,\n} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nexport type ProjectStateFn<T> = (oldState: T) => Partial<T>;\nexport type ProjectValueFn<T, K extends keyof T> = (oldState: T) => T[K];\n\nexport type ProjectStateReducer<T, V> = (oldState: T, value: V) => Partial<T>;\n\nexport type ProjectValueReducer<T, K extends keyof T, V> = (\n  oldState: T,\n  value: V\n) => T[K];\n\n/**\n * @description\n * RxState is a light-weight reactive state management service for managing local state in angular.\n *\n * @example\n * Component({\n *   selector: 'app-stateful',\n *   template: `<div>{{ state$ | async | json }}</div>`,\n *   providers: [RxState]\n * })\n * export class StatefulComponent {\n *   readonly state$ = this.state.select();\n *\n *   constructor(private state: RxState<{ foo: string }>) {}\n * }\n *\n * @docsCategory RxState\n * @docsPage RxState\n */\n@Injectable()\nexport class RxState<T extends object> implements OnDestroy, Subscribable<T> {\n  private subscription = new Subscription();\n\n  private accumulator = createAccumulationObservable<T>();\n  private effectObservable = createSideEffectObservable();\n\n  /**\n   * @description\n   * The unmodified state exposed as `Observable<T>`. It is not shared, distinct or gets replayed.\n   * Use the `$` property if you want to read the state without having applied {@link stateful} to it.\n   */\n  readonly $: Observable<T> = this.accumulator.signal$;\n\n  /**\n   * @internal\n   */\n  constructor() {\n    this.subscription.add(this.subscribe());\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * @description\n   *\n   * Allows to customize state accumulation function.\n   * This can be helpful to implement deep updates and tackle other immutability problems in a custom way.\n   * @example\n   *\n   * ```typescript\n   * const myAccumulator = (state: MyState, slice: Partial<MyState>) => deepCopy(state, slice);\n   *\n   * this.state.setAccumulator(myAccumulator);\n   * ```\n   */\n  setAccumulator(accumulatorFn: AccumulationFn): void {\n    this.accumulator.nextAccumulator(accumulatorFn);\n  }\n\n  /**\n   * @description\n   * Read from the state in imperative manner. Returns the state object in its current state.\n   *\n   * @example\n   * const { disabled } = state.get();\n   * if (!disabled) {\n   *   doStuff();\n   * }\n   *\n   * @return T\n   */\n  get(): T;\n\n  /**\n   * @description\n   * Read from the state in imperative manner by providing keys as parameters.\n   * Returns the part of state object.\n   *\n   * @example\n   * // Access a single property\n   *\n   * const bar = state.get('bar');\n   *\n   * // Access a nested property\n   *\n   * const foo = state.get('bar', 'foo');\n   *\n   * @return T | T[K1] | T[K1][K2]\n   */\n\n  get<K1 extends keyof T>(k1: K1): T[K1];\n  /** @internal **/\n  get<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): T[K1][K2];\n  /** @internal **/\n  get<K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n    k1: K1,\n    k2: K2,\n    k3: K3\n  ): T[K1][K2][K3];\n  /** @internal **/\n  get<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]\n  >(k1: K1, k2: K2, k3: K3, k4: K4): T[K1][K2][K3][K4];\n  /** @internal **/\n  get<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]\n  >(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): T[K1][K2][K3][K4][K5];\n  /** @internal **/\n  get<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]\n  >(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): T[K1][K2][K3][K4][K5][K6];\n  /** @internal **/\n  get<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]\n  >(\n    ...keys:\n      | [K1]\n      | [K1, K2]\n      | [K1, K2, K3]\n      | [K1, K2, K3, K4]\n      | [K1, K2, K3, K4, K5]\n      | [K1, K2, K3, K4, K5, K6]\n  ):\n    | T\n    | T[K1]\n    | T[K1][K2]\n    | T[K1][K2][K3]\n    | T[K1][K2][K3][K4]\n    | T[K1][K2][K3][K4][K5]\n    | T[K1][K2][K3][K4][K5][K6] {\n    const hasStateAnyKeys = Object.keys(this.accumulator.state).length > 0;\n    if (!!keys && keys.length) {\n      return safePluck(this.accumulator.state, keys);\n    } else {\n      return hasStateAnyKeys\n        ? this.accumulator.state\n        : (undefined as unknown as T);\n    }\n  }\n\n  /**\n   * @description\n   * Manipulate one or many properties of the state by providing a `Partial<T>` state or a `ProjectionFunction<T>`.\n   *\n   * @example\n   * // Update one or many properties of the state by providing a `Partial<T>`\n   *\n   * const partialState = {\n   *   foo: 'bar',\n   *   bar: 5\n   * };\n   * state.set(partialState);\n   *\n   * // Update one or many properties of the state by providing a `ProjectionFunction<T>`\n   *\n   * const reduceFn = oldState => ({\n   *   bar: oldState.bar + 5\n   * });\n   * state.set(reduceFn);\n   *\n   * @param {Partial<T>|ProjectStateFn<T>} stateOrProjectState\n   * @return void\n   */\n  set(stateOrProjectState: Partial<T> | ProjectStateFn<T>): void;\n\n  /**\n   * @description\n   * Manipulate a single property of the state by the property name and a `ProjectionFunction<T>`.\n   *\n   * @example\n   * const reduceFn = oldState => oldState.bar + 5;\n   * state.set('bar', reduceFn);\n   *\n   * @param {K} key\n   * @param {ProjectValueFn<T, K>} projectSlice\n   * @return void\n   */\n  set<K extends keyof T, O>(key: K, projectSlice: ProjectValueFn<T, K>): void;\n  /**\n   * @internal\n   */\n  set<K extends keyof T>(\n    keyOrStateOrProjectState: Partial<T> | ProjectStateFn<T> | K,\n    stateOrSliceProjectFn?: ProjectValueFn<T, K>\n  ): void {\n    if (\n      typeof keyOrStateOrProjectState === 'object' &&\n      stateOrSliceProjectFn === undefined\n    ) {\n      this.accumulator.nextSlice(keyOrStateOrProjectState);\n      return;\n    }\n\n    if (\n      typeof keyOrStateOrProjectState === 'function' &&\n      stateOrSliceProjectFn === undefined\n    ) {\n      this.accumulator.nextSlice(\n        keyOrStateOrProjectState(this.accumulator.state)\n      );\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrStateOrProjectState) &&\n      typeof stateOrSliceProjectFn === 'function'\n    ) {\n      const state: Partial<T> = {};\n      state[keyOrStateOrProjectState] = stateOrSliceProjectFn(\n        this.accumulator.state\n      );\n      this.accumulator.nextSlice(state);\n      return;\n    }\n\n    throw new Error('wrong params passed to set');\n  }\n\n  /**\n   * @description\n   * Connect an `Observable<Partial<T>>` to the state `T`.\n   * Any change emitted by the source will get merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const sliceToAdd$ = interval(250).pipe(mapTo({\n   *   bar: 5,\n   *   foo: 'foo'\n   * });\n   * state.connect(sliceToAdd$);\n   * // every 250ms the properties bar and foo get updated due to the emission of sliceToAdd$\n   *\n   * // Additionally you can provide a `projectionFunction` to access the current state object and do custom mappings.\n   *\n   * const sliceToAdd$ = interval(250).pipe(mapTo({\n   *   bar: 5,\n   *   foo: 'foo'\n   * });\n   * state.connect(sliceToAdd$, (state, slice) => state.bar += slice.bar);\n   * // every 250ms the properties bar and foo get updated due to the emission of sliceToAdd$. Bar will increase by\n   * // 5 due to the projectionFunction\n   */\n  connect(inputOrSlice$: Observable<Partial<T>>): void;\n\n  /**\n   * @description\n   * Connect an `Observable<V>` to the state `T`.\n   * Any change emitted by the source will get forwarded to to project function and merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * You have to provide a `projectionFunction` to access the current state object and do custom mappings.\n   *\n   * @example\n   * const sliceToAdd$ = interval(250);\n   * state.connect(sliceToAdd$, (s, v) => ({bar: v}));\n   * // every 250ms the property bar get updated due to the emission of sliceToAdd$\n   *\n   */\n  connect<V>(\n    inputOrSlice$: Observable<V>,\n    projectFn: ProjectStateReducer<T, V>\n  ): void;\n  /**\n   *\n   * @description\n   * Connect an `Observable<T[K]>` source to a specific property `K` in the state `T`. Any emitted change will update\n   * this\n   * specific property in the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const myTimer$ = interval(250);\n   * state.connect('timer', myTimer$);\n   * // every 250ms the property timer will get updated\n   */\n  connect<K extends keyof T>(key: K, slice$: Observable<T[K]>): void;\n  /**\n   *\n   * @description\n   * Connect an `Observable<V>` source to a specific property in the state. Additionally you can provide a\n   * `projectionFunction` to access the current state object on every emission of your connected `Observable`.\n   * Any change emitted by the source will get merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const myTimer$ = interval(250);\n   * state.connect('timer', myTimer$, (state, timerChange) => state.timer += timerChange);\n   * // every 250ms the property timer will get updated\n   */\n  connect<K extends keyof T, V>(\n    key: K,\n    input$: Observable<V>,\n    projectSliceFn: ProjectValueReducer<T, K, V>\n  ): void;\n  /**\n   * @internal\n   */\n  connect<K extends keyof T, V>(\n    keyOrInputOrSlice$: K | Observable<Partial<T> | V>,\n    projectOrSlices$?: ProjectStateReducer<T, V> | Observable<T[K] | V>,\n    projectValueFn?: ProjectValueReducer<T, K, V>\n  ): void {\n    if (\n      projectValueFn === undefined &&\n      projectOrSlices$ === undefined &&\n      isObservable(keyOrInputOrSlice$)\n    ) {\n      this.accumulator.nextSliceObservable(keyOrInputOrSlice$);\n      return;\n    }\n\n    if (\n      projectValueFn === undefined &&\n      typeof projectOrSlices$ === 'function' &&\n      isObservable(keyOrInputOrSlice$) &&\n      !isObservable(projectOrSlices$)\n    ) {\n      const project = projectOrSlices$;\n      const slice$ = keyOrInputOrSlice$.pipe(\n        map((v) => project(this.get(), v as V))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    if (\n      projectValueFn === undefined &&\n      isKeyOf<T>(keyOrInputOrSlice$) &&\n      isObservable(projectOrSlices$)\n    ) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(\n        map((value) => ({ ...{}, [key]: value }))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    if (\n      typeof projectValueFn === 'function' &&\n      isKeyOf<T>(keyOrInputOrSlice$) &&\n      isObservable(projectOrSlices$)\n    ) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(\n        map((value) => ({\n          ...{},\n          [key]: projectValueFn(this.get(), value as V),\n        }))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    throw new Error('wrong params passed to connect');\n  }\n\n  /**\n   * @description\n   * Returns the state as cached and distinct `Observable<T>`. This way you don't have to think about **late\n   * subscribers**,\n   * **multiple subscribers** or **multiple emissions** of the same value\n   *\n   * @example\n   * const state$ = state.select();\n   * state$.subscribe(state => doStuff(state));\n   *\n   * @returns Observable<T>\n   */\n  select(): Observable<T>;\n\n  /**\n   * @description\n   * Returns the state as cached and distinct `Observable<A>`. Accepts arbitrary\n   * [rxjs operators](https://rxjs-dev.firebaseapp.com/guide/operators) to enrich the selection with reactive\n   *   composition.\n   *\n   * @example\n   * const profilePicture$ = state.select(\n   *  pluck('profilePicture'),\n   *  switchMap(profilePicture => mapImageAsync(profilePicture))\n   * );\n   * @param op { OperatorFunction<T, A> }\n   * @returns Observable<A>\n   */\n  select<A = T>(op: OperatorFunction<T, A>): Observable<A>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>\n  ): Observable<B>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>\n  ): Observable<C>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B, D = C>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B, D = C, E = D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  /**\n   * @description\n   * Transform a slice of the state by providing keys and map function.\n   * Returns result of applying function to state slice as cached and distinct `Observable<V>`.\n   *\n   * @example\n   * // Project state slice\n   * const text$ = state.select(\n   *   ['query', 'results'],\n   *   ({ query, results }) => `${results.length} results found for \"${query}\"`\n   * );\n   *\n   * @return Observable<V>\n   */\n  select<K extends keyof T, V>(\n    keys: K[],\n    fn: (slice: PickSlice<T, K>) => V,\n    keyCompareMap?: KeyCompareMap<Pick<T, K>>\n  ): Observable<V>;\n  /**\n   * @description\n   * Transform a single property of the state by providing a key and map function.\n   * Returns result of applying function to state property as cached and distinct `Observable<V>`.\n   *\n   * @example\n   * // Project state based on single property\n   * const foo$ = state.select('bar', bar => `bar equals ${bar}`);\n   *\n   * @return Observable<V>\n   */\n  select<K extends keyof T, V>(k: K, fn: (val: T[K]) => V): Observable<V>;\n  /**\n   * @description\n   * Access a single property of the state by providing keys.\n   * Returns a single property of the state as cached and distinct `Observable<T[K1]>`.\n   *\n   * @example\n   * // Access a single property\n   *\n   * const bar$ = state.select('bar');\n   *\n   * // Access a nested property\n   *\n   * const foo$ = state.select('bar', 'foo');\n   *\n   * @return Observable<T[K1]>\n   */\n  select<K1 extends keyof T>(k1: K1): Observable<T[K1]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T, K2 extends keyof T[K1]>(\n    k1: K1,\n    k2: K2\n  ): Observable<T[K1][K2]>;\n  /**\n   * @internal\n   */\n  select<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2]\n  >(k1: K1, k2: K2, k3: K3): Observable<T[K1][K2][K3]>;\n  /**\n   * @internal\n   */\n  select<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]\n  >(k1: K1, k2: K2, k3: K3, k4: K4): Observable<T[K1][K2][K3][K4]>;\n  /**\n   * @internal\n   */\n  select<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]\n  >(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): Observable<T[K1][K2][K3][K4][K5]>;\n  /**\n   * @internal\n   */\n  select<\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]\n  >(\n    k1: K1,\n    k2: K2,\n    k3: K3,\n    k4: K4,\n    k5: K5,\n    k6: K6\n  ): Observable<T[K1][K2][K3][K4][K5][K6]>;\n  /**\n   * @internal\n   */\n  select<R>(\n    ...args:\n      | OperatorFunction<T, unknown>[]\n      | string[]\n      | [k: string, fn: (val: unknown) => unknown]\n      | [\n          keys: string[],\n          fn: (slice: unknown) => unknown,\n          keyCompareMap?: KeyCompareMap<T>\n        ]\n  ): Observable<T | R> {\n    return this.accumulator.state$.pipe(\n      select(...(args as Parameters<typeof select>))\n    );\n  }\n\n  /**\n   * @description\n   * Manages side-effects of your state. Provide an `Observable<any>` **side-effect** and an optional\n   * `sideEffectFunction`.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * // Directly pass an observable side-effect\n   * const localStorageEffect$ = changes$.pipe(\n   *  tap(changes => storeChanges(changes))\n   * );\n   * state.hold(localStorageEffect$);\n   *\n   * // Pass an additional `sideEffectFunction`\n   *\n   * const localStorageEffectFn = changes => storeChanges(changes);\n   * state.hold(changes$, localStorageEffectFn);\n   *\n   * @param {Observable<S>} obsOrObsWithSideEffect\n   * @param {function} [sideEffectFn]\n   */\n  hold<S>(\n    obsOrObsWithSideEffect: Observable<S>,\n    sideEffectFn?: (arg: S) => void\n  ): void {\n    const sideEffect = obsOrObsWithSideEffect.pipe(catchError((e) => EMPTY));\n    if (typeof sideEffectFn === 'function') {\n      this.effectObservable.nextEffectObservable(\n        sideEffect.pipe(tap(sideEffectFn))\n      );\n      return;\n    }\n    this.effectObservable.nextEffectObservable(sideEffect);\n  }\n\n  /**\n   * @internal\n   */\n  subscribe(): Unsubscribable {\n    const subscription = new Subscription();\n    subscription.add(this.accumulator.subscribe());\n    subscription.add(this.effectObservable.subscribe());\n    return subscription;\n  }\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isDefined } from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function insert<T>(source: T[], updates: T | T[]): T[] {\n  const updatesDefined = isDefined(updates);\n  const sourceIsNotArray = !Array.isArray(source);\n  const invalidInput = sourceIsNotArray && !updatesDefined;\n\n  if (sourceIsNotArray && isDefined(source)) {\n    console.warn(`Insert: Original value (${source}) is not an array.`);\n  }\n\n  if (invalidInput) {\n    return source;\n  }\n\n  return (sourceIsNotArray ? [] : source).concat(\n    updatesDefined ? (Array.isArray(updates) ? updates : [updates]) : []\n  );\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { CompareFn, isKeyOf } from '@rx-angular/state/selections';\nimport { ComparableData } from '../interfaces/comparable-data-type';\n\nconst defaultCompareFn = <T>(a: T, b: T) => a === b;\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function valuesComparer<T>(\n  original: T,\n  incoming: T,\n  compare?: ComparableData<T>\n): boolean {\n  if (isKeyOf<T>(compare)) {\n    return original[compare] === incoming[compare];\n  }\n\n  if (Array.isArray(compare)) {\n    const sanitizedKeys = compare.filter((k) => isKeyOf<T>(k));\n    return sanitizedKeys.length > 0\n      ? sanitizedKeys.every((k) => original[k] === incoming[k])\n      : defaultCompareFn(original, incoming);\n  }\n\n  return ((compare as CompareFn<T>) || defaultCompareFn)(original, incoming);\n}\n","import { ComparableData } from '../interfaces/comparable-data-type';\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isDefined } from '@rx-angular/state/selections';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function remove<T>(\n  source: T[],\n  scrap: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  const scrapAsArray = isDefined(scrap)\n    ? Array.isArray(scrap)\n      ? scrap\n      : [scrap]\n    : [];\n  const invalidInput = !Array.isArray(source);\n\n  if (invalidInput) {\n    console.warn(`Remove: original value (${source}) is not an array`);\n    return source;\n  }\n\n  return source.filter((existingItem) => {\n    return !scrapAsArray.some((item) =>\n      valuesComparer(item as T, existingItem, compare)\n    );\n  });\n}\n","import { OnlyKeysOfSpecificType } from '../interfaces/only-keys-of-specific-type';\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isDefined, isKeyOf } from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function toDictionary<T extends object>(\n  source: T[],\n  key:\n    | OnlyKeysOfSpecificType<T, number>\n    | OnlyKeysOfSpecificType<T, string>\n    | OnlyKeysOfSpecificType<T, symbol>\n): { [key: string]: T } {\n  if (!isDefined(source)) {\n    return source as any;\n  }\n\n  const sourceEmpty = !source.length;\n\n  if (!Array.isArray(source) || sourceEmpty || !isKeyOf<T>(source[0][key])) {\n    if (!sourceEmpty) {\n      console.warn('ToDictionary: unexpected input params.');\n    }\n    return {};\n  }\n\n  const dictionary: { [key: string]: T } = {};\n  const length = source.length;\n  let i = 0;\n\n  for (i; i < length; i++) {\n    dictionary[`${source[i][key]}`] = Object.assign({}, source[i]);\n  }\n\n  return dictionary;\n}\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function update<T extends object>(\n  source: T[],\n  updates: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  const updatesDefined = updates != null;\n  const updatesAsArray = updatesDefined\n    ? Array.isArray(updates)\n      ? updates\n      : [updates]\n    : [];\n\n  const sourceDefined = source != null;\n  const sourceIsNotArray = !Array.isArray(source);\n  const invalidInput =\n    sourceIsNotArray || source.length === 0 || updatesAsArray.length === 0;\n\n  if (sourceDefined && sourceIsNotArray) {\n    console.warn(`Update: Original value (${source}) is not an array.`);\n  }\n\n  if (invalidInput) {\n    return source;\n  }\n\n  const x: T[] = [];\n  for (const existingItem of source) {\n    const match = customFind(updatesAsArray, (item) =>\n      valuesComparer(item as T, existingItem, compare)\n    );\n\n    x.push(match ? { ...existingItem, ...match } : existingItem);\n  }\n\n  return x;\n}\n\nfunction customFind<T>(array: T[], fn: (item: T) => boolean): T | undefined {\n  for (const item of array) {\n    const x = fn(item);\n    if (x) {\n      return item;\n    }\n  }\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isDefined, isKeyOf } from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function extract<T extends object, K extends keyof T>(\n  array: T[],\n  keys: K | K[]\n): Pick<T, K>[] {\n  const arrayIsArray = isDefined(array) && Array.isArray(array);\n\n  if (!arrayIsArray) {\n    console.warn(`extract: original value (${array}) is not an array.`);\n    return undefined as any;\n  }\n\n  const sanitizedKeys = (Array.isArray(keys) ? keys : [keys]).filter(\n    (k) => isKeyOf<T>(k) && array.some((i) => k in i)\n  );\n  const length = sanitizedKeys.length;\n\n  if (!sanitizedKeys.length) {\n    console.warn(`extract: provided keys not found`);\n    return undefined as any;\n  }\n\n  return array.map((item) => {\n    let i = 0;\n    const result = {} as Pick<T, K>;\n\n    for (i; i < length; i++) {\n      result[sanitizedKeys[i]] = item[sanitizedKeys[i]];\n    }\n\n    return result;\n  });\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isObjectGuard } from '@rx-angular/state/selections';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\nimport { ComparableData } from '../interfaces/comparable-data-type';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function upsert<T>(\n  source: T[],\n  update: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  // check inputs for validity\n  const updatesAsArray =\n    update != null ? (Array.isArray(update) ? update : [update]) : [];\n  // check inputs for validity\n  const sourceIsNotArray = !Array.isArray(source);\n  const invalidInput = sourceIsNotArray && updatesAsArray.length === 0;\n  // if the source value is not an Array or the input is not defined return the original source\n  // this is the case for any edge case:\n  // '', null, undefined, CustomObjectOfDoomAndDarkness, ...\n  if (invalidInput) {\n    return source;\n  }\n\n  // if source is empty array or not an array, but the updates are valid:\n  // return a shallow copy of the updates as result\n  if (updatesAsArray.length > 0 && (sourceIsNotArray || source.length === 0)) {\n    return [...updatesAsArray] as T[];\n  }\n\n  const inserts: T[] = [];\n  const updates: Record<number, Partial<T>> = {};\n  // process updates/inserts\n  for (const item of updatesAsArray) {\n    const match = source.findIndex((sourceItem) =>\n      valuesComparer(item as T, sourceItem, compare)\n    );\n    // if item already exists, save it as update\n    if (match !== -1) {\n      updates[match] = item;\n    } else {\n      // otherwise consider this as insert\n      if (isObjectGuard(item)) {\n        // create a shallow copy if item is an object\n        inserts.push({ ...(item as T) });\n      } else {\n        // otherwise just push it\n        inserts.push(item);\n      }\n    }\n  }\n\n  const updated = source.map((item, i) => {\n    const updatedItem = updates[i];\n    // process the updated\n    if (updatedItem !== null && updatedItem !== undefined) {\n      if (isObjectGuard(item)) {\n        return { ...item, ...updatedItem } as T;\n      } else {\n        return updatedItem as T;\n      }\n    }\n    return item;\n  });\n\n  // return the combination of the updated source & the inserts as new array\n  return updated.concat(inserts);\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport {\n  isDefined,\n  isKeyOf,\n  isObjectGuard,\n} from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function deleteProp<T extends object, K extends keyof T>(\n  object: T,\n  key: K\n): Omit<T, K> {\n  if (!isDefined(object) || !isObjectGuard(object)) {\n    console.warn(`DeleteProp: original value ${object} is not an object.`);\n    return object;\n  }\n\n  if (!isKeyOf<T>(key)) {\n    console.warn(`DeleteProp: provided key is not a string, number or symbol.`);\n    return { ...object };\n  }\n\n  const copy = { ...object };\n  delete copy[key];\n  return copy;\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isDefined, isObjectGuard } from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function dictionaryToArray<T>(dictionary: { [key: string]: T }): T[] {\n  if (!isDefined(dictionary)) {\n    return dictionary as any;\n  }\n\n  if (!isObjectGuard(dictionary)) {\n    console.warn(`DictionaryToArray: unexpected input.`);\n    return [];\n  }\n\n  return Object.values(dictionary);\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { isObjectGuard } from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function patch<T extends object>(object: T, upd: Partial<T>): T {\n  const update = isObjectGuard(upd) ? upd : {};\n\n  if (!isObjectGuard(object) && isObjectGuard(upd)) {\n    console.warn(`Patch: original value ${object} is not an object.`);\n    return { ...update } as T;\n  }\n\n  if (!isObjectGuard(object) && !isObjectGuard(upd)) {\n    console.warn(\n      `Patch: original value ${object} and updates ${upd} are not objects.`\n    );\n    return object;\n  }\n\n  return { ...object, ...update };\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport {\n  isDefined,\n  isKeyOf,\n  isObjectGuard,\n} from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function setProp<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n  value: T[K]\n): T {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf<T>(key);\n  const initialObject = objectIsObject ? object : ({} as T);\n\n  if (!objectIsObject) {\n    console.warn(`SetProp: original value (${object}) is not an object.`);\n  }\n\n  if (!keyIsValid) {\n    console.warn(`SetProp: key argument (${key}) is invalid.`);\n  }\n\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n\n  if (keyIsValid) {\n    return {\n      ...initialObject,\n      [key]: value,\n    };\n  }\n\n  return { ...initialObject };\n}\n","import { OnlyKeysOfSpecificType } from '../interfaces/only-keys-of-specific-type';\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport {\n  isDefined,\n  isKeyOf,\n  isObjectGuard,\n} from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function toggle<T extends object>(\n  object: T,\n  key: OnlyKeysOfSpecificType<T, boolean>\n): T {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf<T>(key);\n  const initialObject = objectIsObject ? object : ({} as T);\n\n  if (!objectIsObject) {\n    console.warn(`Toggle: original value (${object}) is not an object.`);\n  }\n\n  if (!keyIsValid) {\n    console.warn(`Toggle: key argument (${key}) is invalid.`);\n  }\n\n  if (keyIsValid && typeof initialObject[key] !== 'boolean') {\n    console.warn(`Toggle: value of the key (${key}) is not a boolean.`);\n  }\n\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n\n  if (\n    keyIsValid &&\n    (typeof initialObject[key] === 'boolean' ||\n      !initialObject.hasOwnProperty(key))\n  ) {\n    return { ...initialObject, [key]: !initialObject[key] };\n  }\n\n  return { ...initialObject };\n}\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport {\n  isDefined,\n  isKeyOf,\n  isObjectGuard,\n} from '@rx-angular/state/selections';\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function slice<T extends object, K extends keyof T>(\n  object: T,\n  keys: K | K[]\n): Pick<T, K> {\n  const objectIsObject = isDefined(object) && isObjectGuard(object);\n\n  if (!objectIsObject) {\n    console.warn(`slice: original value (${object}) is not an object.`);\n    return undefined as any;\n  }\n\n  const sanitizedKeys = (Array.isArray(keys) ? keys : [keys]).filter(\n    (k) => isKeyOf<T>(k) && k in object\n  );\n\n  if (!sanitizedKeys.length) {\n    console.warn(`slice: provided keys not found`);\n    return undefined as any;\n  }\n\n  return sanitizedKeys.reduce(\n    (acc, k) => ({ ...acc, [k]: object[k] }),\n    {} as Pick<T, K>\n  );\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
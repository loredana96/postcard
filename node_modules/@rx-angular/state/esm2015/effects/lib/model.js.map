{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../../../libs/state/effects/src/lib/model.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable, Subject } from 'rxjs';\n\n/**\n * Interface to declare name and value of the OnDestroy lifecycle hook\n */\nexport interface DestroyProp {\n  destroy: true;\n}\n\n/**\n * Interface to declare names and values of single shot lifecycle hook. e.g. init, afterViewInit, afterContentInit, destroy\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface SingleShotProps extends DestroyProp {}\n\n/**\n * Interface to declare names and values of lifecycle hook. e.g. init, changes, afterViewInit, etc...\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface HookProps extends DestroyProp {}\n\n/**\n * Interface to specify an Observable channel for lifecycle hooks.\n * It is types as Partial of possible lifecycle names and values\n */\nexport interface DestroyChannel$ {\n  readonly _hooks$: Subject<DestroyProp>;\n}\n\n/**\n * Interface to specify the channel for the `onDestroy` hook as Observable\n */\nexport interface OnDestroy$ extends DestroyChannel$ {\n  onDestroy$: Observable<boolean>;\n}\n"]}
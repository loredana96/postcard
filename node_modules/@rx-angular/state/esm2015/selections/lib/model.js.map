{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../../../libs/state/selections/src/lib/model.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable, Subscribable, Subscription } from 'rxjs';\n\nexport type AccumulationFn = <T>(st: T, sl: Partial<T>) => T;\n\nexport interface Accumulator<T> extends Subscribable<T> {\n  state: T;\n  state$: Observable<T>;\n  signal$: Observable<T>;\n  subscribe: () => Subscription;\n  nextSlice: (stateSlice: Partial<T>) => void;\n  nextSliceObservable: (state$: Observable<Partial<T>>) => void;\n  nextAccumulator: (fn: AccumulationFn) => void;\n}\n"]}
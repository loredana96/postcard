{"version":3,"file":"key-compare-map.js","sourceRoot":"","sources":["../../../../../../../libs/state/selections/src/lib/interfaces/key-compare-map.ts"],"names":[],"mappings":"","sourcesContent":["import { CompareFn } from './compare-fn';\n\n/**\n * @description\n * The `KeyCompareMap` is used to configure custom comparison for defined keys.\n *\n * @example\n * const keyCompareMap = {\n *    myKey: (o, n) => customCompare(o, n)\n *  };\n *  const o$ = of({\n *    myKey: 5,\n *    myOtherKey: 'bar'\n *  }).pipe(distinctUntilSomeChanged(['myKey', 'myOtherKey'], keyCompareMap));\n *\n *  //or\n *\n *  const o$ = of({\n *    myKey: 5,\n *    myOtherKey: 'bar'\n *  }).pipe(selectSlice(['myKey', 'myOtherKey'], keyCompareMap));\n *\n * @docsPage interfaces\n * @docsCategory operators\n */\nexport type KeyCompareMap<T extends object> = {\n  [K in keyof Partial<T>]: CompareFn<T[K]>;\n};\n"]}
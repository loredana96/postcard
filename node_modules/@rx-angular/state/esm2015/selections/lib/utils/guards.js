export function isPromiseGuard(value) {
    return (value !== null &&
        value !== undefined &&
        typeof value.subscribe !== 'function' &&
        typeof value.then === 'function');
}
export function isOperateFnArrayGuard(op) {
    if (!Array.isArray(op)) {
        return false;
    }
    return op.length > 0 && op.every((i) => typeof i === 'function');
}
export function isStringArrayGuard(op) {
    if (!Array.isArray(op)) {
        return false;
    }
    return op.length > 0 && op.every((i) => typeof i === 'string');
}
export function isIterableGuard(obj) {
    if (obj === null || obj === undefined) {
        return false;
    }
    return typeof obj[Symbol.iterator] === 'function';
}
export function isKeyOf(k) {
    const typeofK = typeof k;
    return (k !== null &&
        k !== undefined &&
        ['string', 'symbol', 'number'].includes(typeofK));
}
export function isObjectGuard(obj) {
    return (obj !== null &&
        obj !== undefined &&
        typeof obj === 'object' &&
        !Array.isArray(obj));
}
export function isDefined(val) {
    return val !== null && val !== undefined;
}
export function isStringAndFunctionTupleGuard(op) {
    return typeof op[0] === 'string' && typeof op[1] === 'function';
}
export function isStringArrayFunctionAndOptionalObjectTupleGuard(op) {
    return (isStringArrayGuard(op[0]) &&
        typeof op[1] === 'function' &&
        (op[2] === undefined || typeof op[2] === 'object'));
}
//# sourceMappingURL=guards.js.map
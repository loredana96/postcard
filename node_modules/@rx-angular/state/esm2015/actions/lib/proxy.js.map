{"version":3,"file":"proxy.js","sourceRoot":"","sources":["../../../../../../libs/state/actions/src/lib/proxy.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAItC,MAAM,UAAU,kBAAkB,CAChC,QAAkD,EAClD,UAAc,EACd,YAA2B;IAK3B,SAAS,QAAQ,CAAC,KAAgB,EAAE,IAAa;QAC/C,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,EAAa,CAAC;QAC5D,IAAI;YACF,MAAM,GAAG,GACP,UAAU,IAAK,UAAkB,CAAC,IAAI,CAAC;gBACrC,CAAC,CAAE,UAAkB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;gBAClC,CAAC,CAAC,KAAK,CAAC;YACZ,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACZ,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,CAAC,GAAG,CAAC,CAAC;SAChC;IACH,CAAC;IAED,OAAO;QACL,2EAA2E;QAC3E,KAAK,CAAC,CAAkB,EAAE,EAAO,EAAE,KAAU;YAC3C,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CACtB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CACvC,QAAQ,CAAC,CAAQ,EAAE,CAAmB,CAAC,CACxC,CACF,CAAC;QACJ,CAAC;QACD,GAAG,CAAC,CAAC,EAAE,QAAgB;YACrB,MAAM,IAAI,GAAG,QAAmB,CAAC;YAEjC,sDAAsD;YACtD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,GAAG,EAAE;gBAC3C,IAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/B,OAAO,CAAC,KAAgB,EAAE,EAAE,CAAC,KAAK,CAC9B,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;wBACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,EAAa,CAAC;wBACtD,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACrB,CAAC,CAAC,CACH,CAAC;iBACL;gBAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAY,CAAC;gBACzD,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,EAAa,CAAC;gBACpE,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC3B;YAED,8CAA8C;YAC9C,OAAO,CAAC,IAAe,EAAE,EAAE;gBACzB,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC;QACJ,CAAC;QACD,GAAG;YACD,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC3E,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @internal\n * Internal helper to create the proxy object\n * It lifes as standalone function because we dont need to carrie it in memory for every ActionHandler instance\n * @param subjects\n * @param transforms\n */\nimport { merge, Subject } from 'rxjs';\nimport { KeysOf, ValuesOf, RxActions } from './types';\nimport { ErrorHandler } from '@angular/core';\n\nexport function actionProxyHandler<T extends object, U>(\n  subjects: { [K in keyof T]: Subject<ValuesOf<T>> },\n  transforms?: U,\n  errorHandler?: ErrorHandler\n): ProxyHandler<RxActions<T, U>> {\n  type KeysOfT = KeysOf<T>;\n  type ValuesOfT = ValuesOf<T>;\n\n  function dispatch(value: ValuesOfT, prop: KeysOfT) {\n    subjects[prop] = subjects[prop] || new Subject<ValuesOfT>();\n    try {\n      const val =\n        transforms && (transforms as any)[prop]\n          ? (transforms as any)[prop](value)\n          : value;\n      subjects[prop].next(val);\n    } catch (err) {\n      errorHandler?.handleError(err);\n    }\n  }\n  type K = keyof T;\n  return {\n    // shorthand setter for multiple signals e.g. signals({propA: 1, propB: 2})\n    apply(_: RxActions<T, U>, __: any, props: [T]): any {\n      props.forEach((slice) =>\n        Object.entries(slice).forEach(([k, v]) =>\n          dispatch(v as any, k as any as KeysOfT)\n        )\n      );\n    },\n    get(_, property: string) {\n      const prop = property as KeysOfT;\n\n      // the user wants to get a single signal as observable\n      if (prop.toString().split('').pop() === '$') {\n        if(prop.toString().length === 1) {\n          return (props: KeysOfT[]) => merge(\n              ...props.map((k) => {\n                subjects[k] = subjects[k] || new Subject<ValuesOfT>();\n                return subjects[k];\n              })\n            );\n        }\n\n        const propName = prop.toString().slice(0, -1) as KeysOfT;\n        subjects[propName] = subjects[propName] || new Subject<ValuesOfT>();\n        return subjects[propName];\n      }\n\n      // the user wants to get a dispatcher function\n      return (args: ValuesOfT) => {\n        dispatch(args, prop);\n      };\n    },\n    set() {\n      throw new Error('No setters available. To emit call the property name.');\n    },\n  };\n}\n"]}
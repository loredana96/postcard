{"version":3,"file":"valuesComparer.util.js","sourceRoot":"","sources":["../../../../../../../../libs/state/src/lib/deprecated/transformation-helpers/_internals/valuesComparer.util.ts"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,OAAO,EAAa,OAAO,EAAE,MAAM,8BAA8B,CAAC;AAGlE,MAAM,gBAAgB,GAAG,CAAI,CAAI,EAAE,CAAI,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AAEpD;;;GAGG;AACH,MAAM,UAAU,cAAc,CAC5B,QAAW,EACX,QAAW,EACX,OAA2B;IAE3B,IAAI,OAAO,CAAI,OAAO,CAAC,EAAE;QACvB,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,OAAO,CAAC,CAAC;KAChD;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAI,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,aAAa,CAAC,MAAM,GAAG,CAAC;YAC7B,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC1C;IAED,OAAO,CAAE,OAAwB,IAAI,gBAAgB,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC7E,CAAC","sourcesContent":["// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { CompareFn, isKeyOf } from '@rx-angular/state/selections';\nimport { ComparableData } from '../interfaces/comparable-data-type';\n\nconst defaultCompareFn = <T>(a: T, b: T) => a === b;\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nexport function valuesComparer<T>(\n  original: T,\n  incoming: T,\n  compare?: ComparableData<T>\n): boolean {\n  if (isKeyOf<T>(compare)) {\n    return original[compare] === incoming[compare];\n  }\n\n  if (Array.isArray(compare)) {\n    const sanitizedKeys = compare.filter((k) => isKeyOf<T>(k));\n    return sanitizedKeys.length > 0\n      ? sanitizedKeys.every((k) => original[k] === incoming[k])\n      : defaultCompareFn(original, incoming);\n  }\n\n  return ((compare as CompareFn<T>) || defaultCompareFn)(original, incoming);\n}\n"]}